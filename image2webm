#!/bin/bash


VIDEO=
AUDIO=
OUTPUT=
VIDEO_BITRATE=
AUDIO_BITRATE=
CRF=
VIDEO_FORMAT="vp9"
TITLE=
SCALE=
THREADS=4


usage() {
  cat <<EOF
Usage:  image2webm [options] image audio

Options:
 --ab <bitrate>		   Set audio bitrate.
 --vb <bitrate>		   Set video bitrate.
 --crf 			   Set CRF value between 4-63
 -f, --format={vp8|vp9}    Specify video format. Defaults to vp9.
 -o, --output=<file>       Place output into <file>. Defaults to placing
     	       		   <image>.webm in the current directory.
 -s, --scale=<size>	   Scale video to specified size.
     	      		   For example,
			       -s 320:420
			   scales the output image to 320x420. Width and
			   height values can also be replaced with -1 to keep
			   aspect ratio. For example,
			       -s 300:-1
			   will set the width of the output image to 300px and
			   will calculate the height of the output image
			   according to the aspect ratio of the input image.

 -t, --title=<title>	   Specify webm title. Defaults to <image>.
 -h, --help  		   Show this help message and exit.
EOF
}

# getopt parsing
OPTS=$(
  getopt -n 'image2webm' \
	 -o f:ho:s:t: \
	 --long ab:,vb:,crf:,format:,help,output:,scale:,title: -- "$@"
)
if [ $? != 0 ]; then
  echo "Try 'image2webm --help' for more information."
  exit 1
fi
eval set -- "$OPTS"

while : ; do
  case "$1" in
    -h | --help )   usage;              exit 0;;
    --ab )          AUDIO_BITRATE="$2"; shift 2;;
    --vb )          VIDEO_BITRATE="$2"; shift 2;;
    --crf )         CRF="$2";           shift 2;;
    -f | --format ) FORMAT="$2";        shift 2;;
    -o | --output ) OUTPUT="$2";        shift 2;;
    -s | --scale )  SCALE="$2";         shift 2;;
    -t | --title )  TITLE="$2";         shift 2;;
    -- ) shift; break;;
    * )  echo "Unexpected option: $1"; exit 1;;
  esac
done

# check for video and audio
VIDEO=$1
AUDIO=$2
if [ -z "$VIDEO" ] || [ -z "$AUDIO" ]; then
  cat <<EOF
image2webm: input error
An image file and audio file must be provided.
Try 'image2webm --help' for more information."
EOF
  exit 1
fi

# set defaults
if [ -z "$TITLE" ]; then TITLE="${VIDEO//+(*\/|.*)}"; fi
if [ -z "$OUTPUT" ]; then OUTPUT="${VIDEO%.*}.webm"; fi


# TODO
ffmpeg -i 


# sanity test
# ./image2webm --ab 1 --vb 2 --crf 3 -f 4 -o 5 -s y -t z --format 3 --output 4 --scale 5 --title 6 a b
# 123456ab
# ./image2webm --ab 1 --vb 2 --crf 3 -f 4 -s y -t z --format 3 --scale 5 --title 6 a.gif b.mp3
# 123a.webm56a.gifb.mp3
# echo "    ab: $AUDIO_BITRATE
#     vb: $VIDEO_BITRATE
#    crf: $CRF
# format: $FORMAT
# output: $OUTPUT
#  scale: $SCALE
#  title: $TITLE
#  video: $VIDEO
#  audio: $AUDIO"
